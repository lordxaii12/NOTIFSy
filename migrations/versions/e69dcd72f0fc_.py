"""empty message

Revision ID: e69dcd72f0fc
Revises: 
Create Date: 2025-02-10 15:50:59.481706

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'e69dcd72f0fc'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_logs',
    sa.Column('log_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user', sa.String(length=50), nullable=False),
    sa.Column('activity', sa.String(length=999), nullable=False),
    sa.Column('created_on', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('log_id'),
    sa.UniqueConstraint('activity'),
    sa.UniqueConstraint('created_on'),
    sa.UniqueConstraint('log_id'),
    sa.UniqueConstraint('user')
    )
    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_by', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('created_on', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('updated_by', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('updated_on', sa.String(length=100), nullable=True))
        batch_op.create_unique_constraint(None, ['role_id'])

    with op.batch_alter_table('userv1', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'roles', ['role_id'], ['role_id'])
        batch_op.drop_column('role')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('userv1', schema=None) as batch_op:
        batch_op.add_column(sa.Column('role', mysql.VARCHAR(length=50), nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')

    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('updated_on')
        batch_op.drop_column('updated_by')
        batch_op.drop_column('created_on')
        batch_op.drop_column('created_by')

    op.drop_table('user_logs')
    # ### end Alembic commands ###
